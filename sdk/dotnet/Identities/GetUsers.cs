// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps.Identities
{
    public static class GetUsers
    {
        /// <summary>
        /// Use this data source to access information about an existing users within Azure DevOps.
        /// 
        /// {{% examples %}}
        /// ## Example Usage
        /// {{% example %}}
        /// 
        /// ```csharp
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// class MyStack : Stack
        /// {
        ///     public MyStack()
        ///     {
        ///         var user = Output.Create(AzureDevOps.Identities.GetUsers.InvokeAsync(new AzureDevOps.Identities.GetUsersArgs
        ///         {
        ///             PrincipalName = "contoso-user@contoso.onmicrosoft.com",
        ///         }));
        ///         var all_users = Output.Create(AzureDevOps.Identities.GetUsers.InvokeAsync());
        ///         var all_from_origin = Output.Create(AzureDevOps.Identities.GetUsers.InvokeAsync(new AzureDevOps.Identities.GetUsersArgs
        ///         {
        ///             Origin = "aad",
        ///         }));
        ///         var all_from_subjectTypes = Output.Create(AzureDevOps.Identities.GetUsers.InvokeAsync(new AzureDevOps.Identities.GetUsersArgs
        ///         {
        ///             SubjectTypes = 
        ///             {
        ///                 "aad",
        ///                 "msa",
        ///             },
        ///         }));
        ///         var all_from_origin_id = Output.Create(AzureDevOps.Identities.GetUsers.InvokeAsync(new AzureDevOps.Identities.GetUsersArgs
        ///         {
        ///             Origin = "aad",
        ///             OriginId = "a7ead982-8438-4cd2-b9e3-c3aa51a7b675",
        ///         }));
        ///     }
        /// 
        /// }
        /// ```
        /// {{% /example %}}
        /// {{% /examples %}}
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 5.1 - Graph Users API](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/users?view=azure-devops-rest-5.1)
        /// </summary>
        public static Task<GetUsersResult> InvokeAsync(GetUsersArgs? args = null, InvokeOptions? options = null)
            => Pulumi.Deployment.Instance.InvokeAsync<GetUsersResult>("azuredevops:Identities/getUsers:getUsers", args ?? new GetUsersArgs(), options.WithVersion());
    }


    public sealed class GetUsersArgs : Pulumi.InvokeArgs
    {
        [Input("origin")]
        public string? Origin { get; set; }

        [Input("originId")]
        public string? OriginId { get; set; }

        [Input("principalName")]
        public string? PrincipalName { get; set; }

        [Input("subjectTypes")]
        private List<string>? _subjectTypes;
        public List<string> SubjectTypes
        {
            get => _subjectTypes ?? (_subjectTypes = new List<string>());
            set => _subjectTypes = value;
        }

        public GetUsersArgs()
        {
        }
    }


    [OutputType]
    public sealed class GetUsersResult
    {
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        public readonly string? Origin;
        public readonly string? OriginId;
        public readonly string? PrincipalName;
        public readonly ImmutableArray<string> SubjectTypes;
        public readonly ImmutableArray<Outputs.GetUsersUserResult> Users;

        [OutputConstructor]
        private GetUsersResult(
            string id,

            string? origin,

            string? originId,

            string? principalName,

            ImmutableArray<string> subjectTypes,

            ImmutableArray<Outputs.GetUsersUserResult> users)
        {
            Id = id;
            Origin = origin;
            OriginId = originId;
            PrincipalName = principalName;
            SubjectTypes = subjectTypes;
            Users = users;
        }
    }
}
